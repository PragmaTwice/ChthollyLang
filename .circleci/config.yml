version: 2.1

commands:
  install-deps:
    steps:
      - run: apt-get update -yqq && apt-get install -yqq cmake lcov libgtest-dev
  install-clang:
    steps:
      - run: apt-get update -yqq && apt-get install -yqq clang-8
      - run: echo "export C=clang-8 CXX=clang++-8 COV='llvm-cov-8 gcov'" >> $BASH_ENV
  install-gcc:
    steps:
      - run: apt-get update -yqq && apt-get install -yqq g++-9
      - run: echo 'export C=gcc-9 CXX=g++-9 COV=gcov-9' >> $BASH_ENV
  build-and-test:
    steps:
      - run: mkdir build/cmake
      # Generate makefile
      - run: cd build/cmake && cmake -D ENABLE_CODECOV=ON ../..
      # Build
      - run: cd build/cmake && make
      # Test
      - run: cd build/cmake && make test
  codecov-report:
    steps:
      - run: bash <(curl -s https://codecov.io/bash) -x $COV

jobs:
  build-with-clang:
    docker: 
      - image: buildpack-deps:disco-scm
    steps:
      - checkout
      - install-clang
      - install-deps
      - build-and-test
      - codecov-report
  build-with-gcc:
    docker: 
      - image: buildpack-deps:disco-scm
    steps:
      - checkout
      - install-gcc
      - install-deps
      - build-and-test
      - codecov-report

workflows:
  version: 2
  build-with-clang:
    jobs:
      - build-with-clang
  build-with-gcc:
    jobs:
      - build-with-gcc
